---
description: 
globs: 
alwaysApply: false
---
# React Component Development Standards

## Component Structure

- File Naming: Use PascalCase (e.g., UserProfile.js). Colocate styles/tests if applicable.
- Exports: Use named exports primarily. Default exports for page components if necessary.
- Props: Use JSDoc to document props (e.g., /** @param {{ userId: string }} props */). Place JSDoc directly above the component.
- Hooks: Call hooks at the top level of the component, before any conditional logic or return statements.
- Imports: Order imports: React → external libraries (e.g., react-bootstrap) → internal modules/components → assets/styles.

## State Management

- Simple State: Use useState for simple, local component state.
- Complex State/Logic: Consider useReducer for state transitions involving multiple sub-values or complex logic.
- Shared State: For state shared across multiple components, use Context API for simple cases or a dedicated state management library (e.g., Zustand, Redux Toolkit) for more complex applications. Avoid prop drilling excessively.

## Styling

- Primarily use React-Bootstrap components and Bootstrap utility classNames (e.g., className="p-3 mb-4").
- For dynamic styles based on props or state, use conditional className logic (e.g., template strings or ternaries).
- Avoid inline styles unless absolutely necessary for dynamic values that cannot be represented with Bootstrap classes.


## Examples

```typescript
// Example Structure
import React, { useState, useEffect } from 'react';
import { Card, Button } from 'react-bootstrap'; // External library
import { fetchUserData } from '../utils/api'; // Internal module
import './UserProfile.css'; // Style (if needed)

/**
 * @param {{ userId: string }} props
 */
export const UserProfile = ({ userId }) => {
  const [userData, setUserData] = useState(null);

  useEffect(() => {
    fetchUserData(userId).then(setUserData);
  }, [userId]);

  if (!userData) return <div>Loading...</div>;

  return (
    <Card className="p-3 mb-4">
      <Card.Body>
        <h4>{userData.name}</h4>
        <p>{userData.email}</p>
        <Button variant="primary">Message</Button>
      </Card.Body>
    </Card>
  );
};
```

## Attached References
- `@StyleGuide.md` (Link to a more comprehensive style guide if available)




